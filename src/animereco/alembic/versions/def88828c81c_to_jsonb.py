"""To jsonb

Revision ID: def88828c81c
Revises: 215a01eb0922
Create Date: 2025-04-14 12:57:12.483893

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "def88828c81c"
down_revision: Union[str, None] = "215a01eb0922"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "anime",
        "doc",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        type_=postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
        existing_nullable=True,
    )
    op.alter_column(
        "anime_mistral",
        "doc",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        type_=postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
        existing_nullable=True,
    )
    # ### end Alembic commands ###

    # op.execute("""
    #     ALTER TABLE anime_mistral
    #     ADD COLUMN title_english TEXT GENERATED ALWAYS AS (doc->>'title_english') STORED,
    #     ADD COLUMN title_native TEXT GENERATED ALWAYS AS (doc->>'title_native') STORED;
    # """)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "anime_mistral",
        "doc",
        existing_type=postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
        type_=postgresql.JSON(astext_type=sa.Text()),
        existing_nullable=True,
    )
    op.alter_column(
        "anime",
        "doc",
        existing_type=postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
        type_=postgresql.JSON(astext_type=sa.Text()),
        existing_nullable=True,
    )
    # ### end Alembic commands ###
